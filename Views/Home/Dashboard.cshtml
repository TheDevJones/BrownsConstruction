@model DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<div class="space-y-6">
    <!-- Welcome Section -->
    <div class="bg-gradient-to-r from-brand-navy to-brand-blue rounded-xl p-6 text-white shadow-xl">
        <div class="flex items-center justify-between flex-wrap gap-4">
            <div>
                <h1 class="text-3xl font-bold mb-2">
                    <span id="greeting">Welcome back</span>, @Model.User.FirstName!
                </h1>
                <p class="text-blue-100 mb-2">Here's what's happening with your projects today.</p>
                <p class="text-sm text-blue-200">
                    <i class="far fa-calendar-alt mr-2"></i>
                    <span id="currentDate"></span>
                </p>
            </div>
            <div class="text-right">
                <div class="bg-white bg-opacity-10 rounded-lg p-3 backdrop-blur-sm">
                    <p class="text-sm text-blue-100 mb-1">
                        <i class="fas fa-user-tag mr-2"></i>@Model.User.Role
                    </p>
                    <p class="text-sm text-blue-100">
                        <i class="fas fa-building mr-2"></i>@Model.User.Company
                    </p>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <!-- Total Projects Card -->
        <div class="bg-white rounded-xl p-6 shadow-md border-l-4 border-brand-orange hover:shadow-lg transform hover:-translate-y-1 transition-all duration-300">
            <div class="flex items-start justify-between">
                <div class="flex-1">
                    <p class="text-sm font-medium text-gray-600 mb-2">Total Projects</p>
                    <p class="text-4xl font-bold text-gray-900 mb-3">@Model.TotalProjects</p>
                    <div class="flex items-center text-sm">
                        <span class="text-brand-orange font-medium hover:underline cursor-pointer">
                            <i class="fas fa-chart-line mr-1"></i>View Details
                        </span>
                    </div>
                </div>
                <div class="w-12 h-12 bg-orange-50 rounded-lg flex items-center justify-center flex-shrink-0">
                    <i class="fas fa-project-diagram text-brand-orange text-xl"></i>
                </div>
            </div>
        </div>

        <!-- Active Projects Card -->
        <div class="bg-white rounded-xl p-6 shadow-md border-l-4 border-green-500 hover:shadow-lg transform hover:-translate-y-1 transition-all duration-300">
            <div class="flex items-start justify-between">
                <div class="flex-1">
                    <p class="text-sm font-medium text-gray-600 mb-2">Active Projects</p>
                    <p class="text-4xl font-bold text-gray-900 mb-3">@Model.ActiveProjects</p>
                    <div class="flex items-center text-sm">
                        <span class="text-green-600 font-medium hover:underline cursor-pointer">
                            <i class="fas fa-sync-alt mr-1"></i>In Progress
                        </span>
                    </div>
                </div>
                <div class="w-12 h-12 bg-green-50 rounded-lg flex items-center justify-center flex-shrink-0">
                    <i class="fas fa-play-circle text-green-500 text-xl"></i>
                </div>
            </div>
        </div>

        <!-- Maintenance Requests Card -->
        <div class="bg-white rounded-xl p-6 shadow-md border-l-4 border-blue-500 hover:shadow-lg transform hover:-translate-y-1 transition-all duration-300">
            <div class="flex items-start justify-between">
                <div class="flex-1">
                    <p class="text-sm font-medium text-gray-600 mb-2">Maintenance Requests</p>
                    <p class="text-4xl font-bold text-gray-900 mb-3">@Model.TotalMaintenanceRequests</p>
                    <div class="flex items-center text-sm">
                        <span class="text-blue-600 font-medium hover:underline cursor-pointer">
                            <i class="fas fa-clipboard-check mr-1"></i>Track Status
                        </span>
                    </div>
                </div>
                <div class="w-12 h-12 bg-blue-50 rounded-lg flex items-center justify-center flex-shrink-0">
                    <i class="fas fa-tools text-blue-500 text-xl"></i>
                </div>
            </div>
        </div>

        <!-- Overdue Tasks Card -->
        <div class="bg-white rounded-xl p-6 shadow-md border-l-4 border-red-500 hover:shadow-lg transform hover:-translate-y-1 transition-all duration-300">
            <div class="flex items-start justify-between">
                <div class="flex-1">
                    <p class="text-sm font-medium text-gray-600 mb-2">Overdue Tasks</p>
                    <p class="text-4xl font-bold text-gray-900 mb-3">@Model.OverdueTasks</p>
                    <div class="flex items-center text-sm">
                        @if (Model.OverdueTasks > 0)
                        {
                            <span class="text-red-600 font-medium animate-pulse">
                                <i class="fas fa-exclamation-circle mr-1"></i>Needs Attention
                            </span>
                        }
                        else
                        {
                            <span class="text-green-600 font-medium">
                                <i class="fas fa-check-circle mr-1"></i>All Clear
                            </span>
                        }
                    </div>
                </div>
                <div class="w-12 h-12 bg-red-50 rounded-lg flex items-center justify-center flex-shrink-0">
                    <i class="fas fa-exclamation-triangle text-red-500 text-xl"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <!-- Project Status Chart -->
        <div class="bg-white rounded-xl p-6 shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="flex items-center justify-between mb-6">
                <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                    <i class="fas fa-chart-pie text-brand-blue mr-2"></i>
                    Project Status Distribution
                </h3>
                <button onclick="refreshChart('project')" class="text-gray-400 hover:text-brand-blue transition-colors p-2 rounded-lg hover:bg-gray-50">
                    <i class="fas fa-sync-alt"></i>
                </button>
            </div>
            <div class="relative" style="height: 280px;">
                <canvas id="projectStatusChart"></canvas>
            </div>
            <div class="mt-6 pt-4 border-t border-gray-100">
                <div class="grid grid-cols-2 gap-4">
                    <div class="text-center">
                        <p class="text-sm text-gray-600 mb-1">Total</p>
                        <p class="text-2xl font-bold text-gray-900">@Model.TotalProjects</p>
                    </div>
                    <div class="text-center">
                        <p class="text-sm text-gray-600 mb-1">Active</p>
                        <p class="text-2xl font-bold text-green-600">@Model.ActiveProjects</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Task Status Chart -->
        <div class="bg-white rounded-xl p-6 shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="flex items-center justify-between mb-6">
                <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                    <i class="fas fa-chart-bar text-brand-orange mr-2"></i>
                    Task Status Distribution
                </h3>
                <button onclick="refreshChart('task')" class="text-gray-400 hover:text-brand-orange transition-colors p-2 rounded-lg hover:bg-gray-50">
                    <i class="fas fa-sync-alt"></i>
                </button>
            </div>
            <div class="relative" style="height: 280px;">
                <canvas id="taskStatusChart"></canvas>
            </div>
            <div class="mt-6 pt-4 border-t border-gray-100">
                <div class="grid grid-cols-2 gap-4">
                    <div class="text-center">
                        <p class="text-sm text-gray-600 mb-1">Total Tasks</p>
                        <p class="text-2xl font-bold text-gray-900">
                            @(Model.TaskStatusChart?.Values.Sum() ?? 0)
                        </p>
                    </div>
                    <div class="text-center">
                        <p class="text-sm text-gray-600 mb-1">Overdue</p>
                        <p class="text-2xl font-bold text-red-600">@Model.OverdueTasks</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activity Section -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <!-- Recent Projects -->
        <div class="bg-white rounded-xl p-6 shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="flex items-center justify-between mb-5">
                <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                    <i class="fas fa-folder-open text-brand-orange mr-2"></i>
                    Recent Projects
                </h3>
                <a asp-controller="Project" asp-action="Index"
                   class="text-brand-blue hover:text-brand-orange text-sm font-medium transition-colors flex items-center">
                    View All <i class="fas fa-arrow-right ml-1 text-xs"></i>
                </a>
            </div>
            <div class="space-y-3">
                @if (Model.RecentProjects?.Any() == true)
                {
                    @foreach (var project in Model.RecentProjects)
                    {
                        <div class="group p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-all duration-200 cursor-pointer border border-transparent hover:border-gray-200">
                            <div class="flex items-center justify-between gap-3">
                                <div class="flex-1 min-w-0">
                                    <p class="font-medium text-gray-900 truncate text-sm group-hover:text-brand-orange transition-colors">
                                        @project.Name
                                    </p>
                                    <p class="text-xs text-gray-600 truncate mt-1">
                                        <i class="fas fa-map-marker-alt mr-1"></i>@project.Location
                                    </p>
                                </div>
                                <span class="px-2.5 py-1 text-xs font-medium rounded-full whitespace-nowrap flex-shrink-0
                                    @(project.Status == "In Progress" ? "bg-green-100 text-green-700" :
                                      project.Status == "Planning" ? "bg-blue-100 text-blue-700" :
                                      project.Status == "Completed" ? "bg-gray-100 text-gray-700" :
                                      "bg-yellow-100 text-yellow-700")">
                                    @project.Status
                                </span>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-12 text-gray-400">
                        <i class="fas fa-folder-open text-5xl mb-3 opacity-30"></i>
                        <p class="text-sm font-medium">No recent projects</p>
                    </div>
                }
            </div>
        </div>

        <!-- Recent Maintenance Requests -->
        <div class="bg-white rounded-xl p-6 shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="flex items-center justify-between mb-5">
                <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                    <i class="fas fa-wrench text-blue-500 mr-2"></i>
                    Recent Maintenance
                </h3>
                <a asp-controller="Maintenance" asp-action="Index"
                   class="text-brand-blue hover:text-brand-orange text-sm font-medium transition-colors flex items-center">
                    View All <i class="fas fa-arrow-right ml-1 text-xs"></i>
                </a>
            </div>
            <div class="space-y-3">
                @if (Model.RecentMaintenanceRequests?.Any() == true)
                {
                    @foreach (var request in Model.RecentMaintenanceRequests)
                    {
                        <div class="group p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-all duration-200 cursor-pointer border border-transparent hover:border-gray-200">
                            <div class="flex items-center justify-between gap-3">
                                <div class="flex-1 min-w-0">
                                    <p class="font-medium text-gray-900 truncate text-sm group-hover:text-blue-600 transition-colors">
                                        @request.Title
                                    </p>
                                    <p class="text-xs text-gray-600 truncate mt-1">
                                        <i class="fas fa-map-marker-alt mr-1"></i>@request.Location
                                    </p>
                                </div>
                                <span class="px-2.5 py-1 text-xs font-medium rounded-full whitespace-nowrap flex-shrink-0
                                    @(request.Priority == "High" ? "bg-red-100 text-red-700" :
                                      request.Priority == "Medium" ? "bg-yellow-100 text-yellow-700" :
                                      "bg-gray-100 text-gray-700")">
                                    @request.Priority
                                </span>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-12 text-gray-400">
                        <i class="fas fa-wrench text-5xl mb-3 opacity-30"></i>
                        <p class="text-sm font-medium">No maintenance requests</p>
                    </div>
                }
            </div>
        </div>

        <!-- Recent Tasks -->
        <div class="bg-white rounded-xl p-6 shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="flex items-center justify-between mb-5">
                <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                    <i class="fas fa-tasks text-green-500 mr-2"></i>
                    Recent Tasks
                </h3>
                <a asp-controller="Task" asp-action="Index"
                   class="text-brand-blue hover:text-brand-orange text-sm font-medium transition-colors flex items-center">
                    View All <i class="fas fa-arrow-right ml-1 text-xs"></i>
                </a>
            </div>
            <div class="space-y-3">
                @if (Model.RecentTasks?.Any() == true)
                {
                    @foreach (var task in Model.RecentTasks)
                    {
                        <div class="group p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-all duration-200 cursor-pointer border border-transparent hover:border-gray-200">
                            <div class="flex items-center justify-between gap-3">
                                <div class="flex-1 min-w-0">
                                    <p class="font-medium text-gray-900 truncate text-sm group-hover:text-green-600 transition-colors">
                                        @task.Title
                                    </p>
                                    <p class="text-xs text-gray-600 mt-1">
                                        <i class="far fa-calendar mr-1"></i>Due: @task.DueDate.ToString("MMM dd, yyyy")
                                    </p>
                                </div>
                                <span class="px-2.5 py-1 text-xs font-medium rounded-full whitespace-nowrap flex-shrink-0
                                    @(task.Status == "Completed" ? "bg-green-100 text-green-700" :
                                      task.Status == "In Progress" ? "bg-blue-100 text-blue-700" :
                                      task.Status == "Pending" ? "bg-yellow-100 text-yellow-700" :
                                      "bg-red-100 text-red-700")">
                                    @task.Status
                                </span>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-12 text-gray-400">
                        <i class="fas fa-tasks text-5xl mb-3 opacity-30"></i>
                        <p class="text-sm font-medium">No recent tasks</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="bg-white rounded-xl p-6 shadow-md hover:shadow-lg transition-shadow duration-300">
        <h3 class="text-lg font-semibold text-gray-900 mb-5 flex items-center">
            <i class="fas fa-bolt text-brand-orange mr-2"></i>
            Quick Actions
        </h3>
        <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
            <a asp-controller="Project" asp-action="Create"
               class="group flex flex-col items-center justify-center p-6 bg-gradient-to-br from-brand-orange to-brand-purple text-white rounded-xl hover:shadow-lg transform hover:-translate-y-1 transition-all duration-300">
                <div class="w-14 h-14 bg-white bg-opacity-20 rounded-full flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300">
                    <i class="fas fa-plus-circle text-2xl"></i>
                </div>
                <span class="text-sm font-medium text-center">New Project</span>
            </a>

            <a asp-controller="Maintenance" asp-action="Create"
               class="group flex flex-col items-center justify-center p-6 bg-gradient-to-br from-blue-500 to-blue-600 text-white rounded-xl hover:shadow-lg transform hover:-translate-y-1 transition-all duration-300">
                <div class="w-14 h-14 bg-white bg-opacity-20 rounded-full flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300">
                    <i class="fas fa-tools text-2xl"></i>
                </div>
                <span class="text-sm font-medium text-center">Maintenance Request</span>
            </a>

            <a asp-controller="Task" asp-action="Create"
               class="group flex flex-col items-center justify-center p-6 bg-gradient-to-br from-green-500 to-green-600 text-white rounded-xl hover:shadow-lg transform hover:-translate-y-1 transition-all duration-300">
                <div class="w-14 h-14 bg-white bg-opacity-20 rounded-full flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300">
                    <i class="fas fa-tasks text-2xl"></i>
                </div>
                <span class="text-sm font-medium text-center">New Task</span>
            </a>

            <a asp-controller="Document" asp-action="Upload"
               class="group flex flex-col items-center justify-center p-6 bg-gradient-to-br from-purple-500 to-purple-600 text-white rounded-xl hover:shadow-lg transform hover:-translate-y-1 transition-all duration-300">
                <div class="w-14 h-14 bg-white bg-opacity-20 rounded-full flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300">
                    <i class="fas fa-upload text-2xl"></i>
                </div>
                <span class="text-sm font-medium text-center">Upload Document</span>
            </a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Set time-based greeting
        function setGreeting() {
            const hour = new Date().getHours();
            let greeting = 'Good evening';

            if (hour < 12) greeting = 'Good morning';
            else if (hour < 18) greeting = 'Good afternoon';

            document.getElementById('greeting').textContent = greeting;
        }

        // Format and display current date
        function setCurrentDate() {
            const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
            const date = new Date().toLocaleDateString('en-US', options);
            document.getElementById('currentDate').textContent = date;
        }

        // Refresh chart with animation
        function refreshChart(type) {
            const button = event.currentTarget;
            const icon = button.querySelector('i');

            icon.classList.add('fa-spin');

            setTimeout(() => {
                icon.classList.remove('fa-spin');
            }, 1000);
        }

        // Initialize charts
        document.addEventListener('DOMContentLoaded', function() {
            setGreeting();
            setCurrentDate();

            // Project Status Chart
            const projectStatusCtx = document.getElementById('projectStatusChart');
            if (projectStatusCtx) {
                const projectStatusData = @Html.Raw(Json.Serialize(Model.ProjectStatusChart ?? new Dictionary<string, int>()));

                new Chart(projectStatusCtx, {
                    type: 'doughnut',
                    data: {
                        labels: Object.keys(projectStatusData),
                        datasets: [{
                            data: Object.values(projectStatusData),
                            backgroundColor: [
                                '#FF6B35',
                                '#3B82F6',
                                '#10B981',
                                '#F59E0B',
                                '#EF4444'
                            ],
                            borderWidth: 3,
                            borderColor: '#fff',
                            hoverBorderWidth: 4,
                            hoverOffset: 8
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        animation: {
                            animateRotate: true,
                            animateScale: true,
                            duration: 1000,
                            easing: 'easeInOutQuart'
                        },
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    padding: 15,
                                    font: {
                                        size: 12,
                                        family: "'Inter', sans-serif"
                                    },
                                    usePointStyle: true,
                                    pointStyle: 'circle',
                                    boxWidth: 8,
                                    boxHeight: 8
                                }
                            },
                            tooltip: {
                                backgroundColor: 'rgba(0, 0, 0, 0.85)',
                                padding: 12,
                                borderWidth: 0,
                                titleFont: {
                                    size: 13,
                                    weight: '600'
                                },
                                bodyFont: {
                                    size: 12
                                },
                                cornerRadius: 8,
                                callbacks: {
                                    label: function(context) {
                                        const label = context.label || '';
                                        const value = context.parsed || 0;
                                        const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                        const percentage = total > 0 ? ((value / total) * 100).toFixed(1) : 0;
                                        return ` ${label}: ${value} (${percentage}%)`;
                                    }
                                }
                            }
                        }
                    }
                });
            }

            // Task Status Chart
            const taskStatusCtx = document.getElementById('taskStatusChart');
            if (taskStatusCtx) {
                const taskStatusData = @Html.Raw(Json.Serialize(Model.TaskStatusChart ?? new Dictionary<string, int>()));

                new Chart(taskStatusCtx, {
                    type: 'bar',
                    data: {
                        labels: Object.keys(taskStatusData),
                        datasets: [{
                            label: 'Tasks',
                            data: Object.values(taskStatusData),
                            backgroundColor: [
                                '#FF6B35',
                                '#3B82F6',
                                '#10B981',
                                '#F59E0B',
                                '#EF4444'
                            ],
                            borderRadius: 8,
                            borderSkipped: false,
                            hoverBackgroundColor: [
                                '#FF5722',
                                '#2563EB',
                                '#059669',
                                '#D97706',
                                '#DC2626'
                            ]
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        animation: {
                            duration: 1000,
                            easing: 'easeInOutQuart',
                            delay: (context) => {
                                let delay = 0;
                                if (context.type === 'data' && context.mode === 'default') {
                                    delay = context.dataIndex * 100;
                                }
                                return delay;
                            }
                        },
                        plugins: {
                            legend: {
                                display: false
                            },
                            tooltip: {
                                backgroundColor: 'rgba(0, 0, 0, 0.85)',
                                padding: 12,
                                borderWidth: 0,
                                titleFont: {
                                    size: 13,
                                    weight: '600'
                                },
                                bodyFont: {
                                    size: 12
                                },
                                cornerRadius: 8
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    stepSize: 1,
                                    font: {
                                        size: 11
                                    },
                                    color: '#6B7280'
                                },
                                grid: {
                                    color: 'rgba(0, 0, 0, 0.05)',
                                    drawBorder: false
                                }
                            },
                            x: {
                                grid: {
                                    display: false,
                                    drawBorder: false
                                },
                                ticks: {
                                    font: {
                                        size: 11
                                    },
                                    color: '#6B7280'
                                }
                            }
                        }
                    }
                });
            }
        });
    </script>
}